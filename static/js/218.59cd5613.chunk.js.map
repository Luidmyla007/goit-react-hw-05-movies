{"version":3,"file":"static/js/218.59cd5613.chunk.js","mappings":"mPAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,mFACc,mCACNC,EAFR,6CAEoDD,EAFpD,YAGQE,EAHR,mBACc,mCADd,4BAKyBC,MAAM,GAAD,OAAIF,GAAJ,OAAUC,IALxC,cAKQE,EALR,gBAMqBA,EAASC,OAN9B,cAMQC,EANR,yBAOSA,EAAKC,MAPd,mEAUA,I,MAAA,E,SAV4B,GAAbR,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,6BCGFS,EAAYC,EAAAA,GAAAA,GAAH,gJASTC,EAAYD,EAAAA,GAAAA,GAAH,6DAKRE,EAAaF,EAAAA,GAAAA,IAAH,qG,SCyBxB,EApCa,WACT,IAAOG,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACNlB,EAAaa,GAAIM,KAAKF,EACzB,GAAE,CAACJ,IACCG,GAKD,+BACI,SAACP,EAAD,UACKO,EAAQI,OAAS,GAC1BJ,EAAQK,KAAI,YAAqD,IAAlDR,EAAiD,EAAjDA,GAAIS,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3C,OACI,UAACb,EAAD,WACuB,OAAjBa,GACJ,SAACZ,EAAD,CAAYa,IAAKC,EAAWC,IAAKL,EAAeM,MAAM,QAAQC,OAAO,WAErE,SAACjB,EAAD,CACEa,IAAG,yCAAoCD,GACvCG,IAAKL,KAGT,wBAAKA,KACL,uCAAeC,OAVCV,EAarB,QAtBM,IA2Bd,C,4GCzCD,SAASiB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOpB,KAAKe,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["Fetch/getMovieCast.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["async function getMovieCast(movieId) {\n  const key = '51114562faac57108ae3113fba230ec4';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n \n  const response = await fetch(`${url}${filter}`);\n  const data = await response.json();  \n  return data.cast;\n}\n\nexport default getMovieCast;","import styled from 'styled-components'; \n\n\nexport const ActorList = styled.ul` \npadding: 20px 150px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 30px;\njustify-content: center;\nlist-style-type: none; \n`\n\nexport const ActorCard = styled.li` \n width: calc((100%-300px) / 8);\n \n`\n    \n export const ActorPhoto = styled.img` \n border-radius: 5px;  \n box-shadow: 10px 10px 8px 2px rgba(0, 0, 0, 0.3);\n`   \n    ;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieCast from 'Fetch/getMovieCast.jsx';\nimport No_photo from '../../Images/No_photo.png';\nimport {ActorList, ActorCard, ActorPhoto } from './Cast.styled';\n\nconst Cast = () => {\n    const {id} = useParams();\n    const [credits, setCredits] = useState([]);  \n\n    useEffect(() => {\n        getMovieCast(id).then(setCredits);\n    }, [id]);\n    if (!credits) {\n        return null;\n    };\n\n    return (\n        <>\n            <ActorList>\n               { credits.length > 0 &&\n        credits.map(({ id, original_name, character, profile_path }) => {\n          return (\n              <ActorCard key={id}>\n                   {profile_path === null ? (\n                <ActorPhoto src={No_photo } alt={original_name} width=\"200px\" height=\"302px\"/>\n              ) : (\n                <ActorPhoto                  \n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={original_name}\n                />\n              )}                  \n              <h4>{original_name}</h4>\n              <p>Character: {character}</p>\n            </ActorCard>\n          );\n        })}\n            </ActorList>\n        </>\n    )\n  \n};\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["getMovieCast","movieId","url","filter","fetch","response","json","data","cast","ActorList","styled","ActorCard","ActorPhoto","id","useParams","useState","credits","setCredits","useEffect","then","length","map","original_name","character","profile_path","src","No_photo","alt","width","height","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}