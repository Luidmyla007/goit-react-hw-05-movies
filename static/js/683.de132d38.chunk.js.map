{"version":3,"file":"static/js/683.de132d38.chunk.js","mappings":"mPACMA,EAAQ,mCAGCC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,0FAC2BC,EAAAA,EAAAA,GAAM,qBAAsB,CACnDC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KAJN,cACWI,EADX,OAOWC,EAAYD,EAAOE,KAAKC,QAAQC,KACvC,YACE,MAAO,CAAEC,GADmC,EAA3CA,GACYC,MAD+B,EAAvCA,MACeC,YADwB,EAAhCA,YACqBC,aADW,EAAnBA,aAE1B,IAVL,kBAYWP,GAZX,kEAFAJ,EAAAA,EAAAA,SAAAA,QAAyB,gCAiBzB,I,MAAA,EAjBA,SAE2B,GAAZF,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,gDCFFc,EAAcC,EAAAA,GAAAA,GAAH,yJAQXC,EAAWD,EAAAA,GAAAA,EAAH,sLAQRE,EAAUF,EAAAA,GAAAA,GAAH,oU,SCZpB,SAASG,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC3B,OACE,SAACN,EAAD,UACIK,GACAA,EAAOV,KAAI,SAAAY,GAAK,OACd,SAACJ,EAAD,WACE,UAAC,KAAD,CACEK,GAAE,iBAAYD,EAAMX,IACpBa,MAAO,CAAEC,KAAMJ,GAFjB,WAIE,SAACJ,EAAD,UAAWK,EAAMV,SACf,gBACEc,IAAG,yCAAoCJ,EAAMT,aAC7Cc,IAAKL,EAAMV,YARLU,EAAMX,GADN,KAgBvB,CAEDQ,EAAUS,UAAY,CACpBR,OAAQS,IAAAA,QACNA,IAAAA,MAAgB,CACdlB,GAAIkB,IAAAA,OACJjB,MAAOiB,IAAAA,OACPC,OAAQD,IAAAA,OACRE,YAAaF,IAAAA,OACbG,UAAWH,IAAAA,UAEbI,YAGJ,I,EAAA,ICtCaC,EAAYlB,EAAAA,GAAAA,GAAH,miCCsBtB,MAnBA,WACE,OAA4BmB,EAAAA,EAAAA,UAAS,MAArC,eAAOf,EAAP,KAAegB,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRpC,IACGqC,KAAKF,GACHG,OAAM,SAAUC,GACfC,QAAQC,IAAI,SAAWF,EACxB,GACN,GAAE,KAGA,iCACC,SAACN,EAAD,8BACA,SAAC,EAAD,CAAYd,OAAQA,MAGzB,C","sources":["Fetch/getTrending.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","Pages/Home/Home.styled.jsx","Pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst TOKEN = '51114562faac57108ae3113fba230ec4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getTrending(page) {\n    const  result =  await axios('trending/movie/day', {\n    params: {\n      api_key: TOKEN,\n      page,\n    },\n    }); \n     const trendsMov = result.data.results.map(\n    ({ id, title, poster_path, vote_average }) => {\n      return { id, title, poster_path, vote_average };\n    }\n  );\n    return trendsMov;\n};\n\nexport default getTrending;","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul` \npadding: 15px 50px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px;\n  justify-content: center;\n  list-style-type: none; \n`\nexport const MovTitle = styled.p` \n font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  color: rgba(9, 60, 61, 1);\n  text-shadow: 2px 2px 4px rgba(143, 199, 201, 1);\nmargin: 0;\n`\nexport const MovItem = styled.li` \n width: calc((100%-80px) / 5);\n  transform: scale(1);\n  border-radius: 12px;\n\n  &:hover {\n    transform: scale(1.01);\n  }\n  &:hover > p {\n    opacity: 1;\n  }\n \n  img {  \n    border-radius: 5px;\n    box-shadow: 10px 10px 8px 2px rgba(0, 0, 0, 0.3);\n    height: 100%;\n    width: 100%;\n`  \n  \n ;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ListWrapper, MovTitle, MovItem } from './MovieList.styled';\n\n\nfunction MovieList({ movies, location }) {\n  return (\n    <ListWrapper>\n       {movies &&\n        movies.map(movie => (\n          <MovItem key={movie.id} >\n            <Link              \n              to={`movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <MovTitle>{movie.title}</MovTitle>            \n                <img                  \n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                />              \n            </Link>\n          </MovItem>\n        ))}\n    </ListWrapper>\n  );\n}\n\nMovieList.prototype = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default MovieList;","import styled from 'styled-components';\n\nexport const MainTitle = styled.h2`\ntext-align: center; \ncolor: rgba(9, 60, 61, 1);\npadding: 0;\nletter-spacing: 1.7;\nmargin-bottom: 20px;\nfont-size: 40px;\nline-height: 50px;   \nfont-weight: 900;\nposition: relative;\nbackground: white;\noverflow: hidden;\ntext-transform: uppercase;\n&:before {\n    content: '';\n    position: absolute;\n    filter: blur(10px);\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    mix-blend-mode: screen;\n    background-image: repeating-linear-gradient(-45deg, transparent, transparent 1em, rgba(9, 60, 61, 1) 1em, rgba(19, 231, 242, 1) 50%), repeating-linear-gradient(45deg, rgba(19, 231, 242, 1), rgba(19, 231, 242, 1) 1em, #FFF 1em, rgba(9, 60, 61, 1) 50%);\n    background-size: 3em 3em, 2em 2em;\n    animation-name: ani;\n    animation-duration: 10s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n}\n@keyframes ani {\n    from {\n        background-position: 0 0;\n    }\n    to {\n        background-position: 100% 0;\n    }\n}\n\n`;","import { useState, useEffect } from 'react';\nimport getTrending from 'Fetch/getTrending.jsx';\nimport MoviesList from 'components/MovieList/MovieList';\nimport { MainTitle } from './Home.styled';\n\nfunction Home() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    getTrending()\n      .then(setMovies)\n        .catch(function (error){\n          console.log('Error:' + error);\n        });    \n  }, []);\n\n  return (\n     <>\n      <MainTitle>Trending today</MainTitle>        \n      <MoviesList movies={movies} />       \n      </>\n  );\n}\n\nexport default Home;"],"names":["TOKEN","getTrending","page","axios","params","api_key","result","trendsMov","data","results","map","id","title","poster_path","vote_average","ListWrapper","styled","MovTitle","MovItem","MovieList","movies","location","movie","to","state","from","src","alt","prototype","propTypes","poster","voteAverage","voteCount","isRequired","MainTitle","useState","setMovies","useEffect","then","catch","error","console","log"],"sourceRoot":""}